Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o (exit)
/usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
                              ./ATmegaBOOT_guhRF.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
                              ./ATmegaBOOT_guhRF.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eerd_byte_atmega256rfr2.o)
                              ./ATmegaBOOT_guhRF.o (__eerd_byte_EEPROM_SUFFIX)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eewr_byte_atmega256rfr2.o)
                              ./ATmegaBOOT_guhRF.o (__eewr_byte_EEPROM_SUFFIX)

Allocating common symbols
Common symbol       size              file

address             0x3               ./ATmegaBOOT_guhRF.o
buff                0x100             ./ATmegaBOOT_guhRF.o
length              0x3               ./ATmegaBOOT_guhRF.o
i                   0x1               ./ATmegaBOOT_guhRF.o
address_high        0x1               ./ATmegaBOOT_guhRF.o
flags               0x1               ./ATmegaBOOT_guhRF.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
Address of section .text set to 0x1f000
Address of section .jumps set to 0x1ff80
LOAD ./ATmegaBOOT_guhRF.o
LOAD ./jumptable.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x000000000001f000      0x8be
 *(.vectors)
 .vectors       0x000000000001f000      0x134 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
                0x000000000001f000                __vectors
                0x000000000001f000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000001f134                . = ALIGN (0x2)
                0x000000000001f134                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000001f134        0x0 linker stubs
 *(.trampolines*)
                0x000000000001f134                __trampolines_end = .
 *(.progmem*)
 .progmem.data.padding
                0x000000000001f134       0x1c ./ATmegaBOOT_guhRF.o
                0x000000000001f134                padding
 .progmem.data.default_mac_address
                0x000000000001f150        0x8 ./ATmegaBOOT_guhRF.o
                0x000000000001f150                default_mac_address
                0x000000000001f158                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000001f158                __ctors_start = .
 *(.ctors)
                0x000000000001f158                __ctors_end = .
                0x000000000001f158                __dtors_start = .
 *(.dtors)
                0x000000000001f158                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000001f158        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
                0x000000000001f158                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000001f158       0x10 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000001f168       0x1a /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
                0x000000000001f168                __do_copy_data
 .init4         0x000000000001f182       0x10 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
                0x000000000001f182                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000001f192        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
 *(.init9)
 *(.text)
 .text          0x000000000001f19a        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
                0x000000000001f19a                __vector_38
                0x000000000001f19a                __vector_22
                0x000000000001f19a                __vector_63
                0x000000000001f19a                __vector_28
                0x000000000001f19a                __vector_67
                0x000000000001f19a                __vector_1
                0x000000000001f19a                __vector_32
                0x000000000001f19a                __vector_75
                0x000000000001f19a                __vector_71
                0x000000000001f19a                __vector_34
                0x000000000001f19a                __vector_62
                0x000000000001f19a                __vector_24
                0x000000000001f19a                __vector_12
                0x000000000001f19a                __vector_55
                0x000000000001f19a                __vector_69
                0x000000000001f19a                __vector_46
                0x000000000001f19a                __bad_interrupt
                0x000000000001f19a                __vector_72
                0x000000000001f19a                __vector_6
                0x000000000001f19a                __vector_31
                0x000000000001f19a                __vector_35
                0x000000000001f19a                __vector_74
                0x000000000001f19a                __vector_39
                0x000000000001f19a                __vector_3
                0x000000000001f19a                __vector_23
                0x000000000001f19a                __vector_68
                0x000000000001f19a                __vector_30
                0x000000000001f19a                __vector_73
                0x000000000001f19a                __vector_45
                0x000000000001f19a                __vector_25
                0x000000000001f19a                __vector_61
                0x000000000001f19a                __vector_11
                0x000000000001f19a                __vector_54
                0x000000000001f19a                __vector_13
                0x000000000001f19a                __vector_17
                0x000000000001f19a                __vector_19
                0x000000000001f19a                __vector_56
                0x000000000001f19a                __vector_7
                0x000000000001f19a                __vector_49
                0x000000000001f19a                __vector_41
                0x000000000001f19a                __vector_64
                0x000000000001f19a                __vector_43
                0x000000000001f19a                __vector_27
                0x000000000001f19a                __vector_5
                0x000000000001f19a                __vector_33
                0x000000000001f19a                __vector_76
                0x000000000001f19a                __vector_47
                0x000000000001f19a                __vector_52
                0x000000000001f19a                __vector_37
                0x000000000001f19a                __vector_4
                0x000000000001f19a                __vector_44
                0x000000000001f19a                __vector_51
                0x000000000001f19a                __vector_9
                0x000000000001f19a                __vector_2
                0x000000000001f19a                __vector_21
                0x000000000001f19a                __vector_15
                0x000000000001f19a                __vector_66
                0x000000000001f19a                __vector_36
                0x000000000001f19a                __vector_58
                0x000000000001f19a                __vector_70
                0x000000000001f19a                __vector_29
                0x000000000001f19a                __vector_60
                0x000000000001f19a                __vector_40
                0x000000000001f19a                __vector_8
                0x000000000001f19a                __vector_26
                0x000000000001f19a                __vector_48
                0x000000000001f19a                __vector_14
                0x000000000001f19a                __vector_57
                0x000000000001f19a                __vector_53
                0x000000000001f19a                __vector_10
                0x000000000001f19a                __vector_50
                0x000000000001f19a                __vector_16
                0x000000000001f19a                __vector_59
                0x000000000001f19a                __vector_18
                0x000000000001f19a                __vector_20
                0x000000000001f19a                __vector_42
                0x000000000001f19a                __vector_65
 .text          0x000000000001f19e        0x0 ./ATmegaBOOT_guhRF.o
 .text          0x000000000001f19e        0x0 ./jumptable.o
 .text          0x000000000001f19e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text          0x000000000001f19e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text          0x000000000001f19e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text          0x000000000001f19e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eerd_byte_atmega256rfr2.o)
 .text          0x000000000001f19e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eewr_byte_atmega256rfr2.o)
                0x000000000001f19e                . = ALIGN (0x2)
 *(.text.*)
 .text.putch    0x000000000001f19e       0x28 ./ATmegaBOOT_guhRF.o
                0x000000000001f19e                putch
 .text.puthex   0x000000000001f1c6       0x30 ./ATmegaBOOT_guhRF.o
                0x000000000001f1c6                puthex
 .text.getch    0x000000000001f1f6       0x94 ./ATmegaBOOT_guhRF.o
                0x000000000001f1f6                getch
 .text.gethexnib
                0x000000000001f28a       0x24 ./ATmegaBOOT_guhRF.o
                0x000000000001f28a                gethexnib
 .text.gethex   0x000000000001f2ae       0x18 ./ATmegaBOOT_guhRF.o
                0x000000000001f2ae                gethex
 .text.getNch   0x000000000001f2c6       0x2e ./ATmegaBOOT_guhRF.o
                0x000000000001f2c6                getNch
 .text.byte_response
                0x000000000001f2f4       0x3e ./ATmegaBOOT_guhRF.o
                0x000000000001f2f4                byte_response
 .text.nothing_response
                0x000000000001f332       0x2e ./ATmegaBOOT_guhRF.o
                0x000000000001f332                nothing_response
 .text.flash_led
                0x000000000001f360       0x32 ./ATmegaBOOT_guhRF.o
                0x000000000001f360                flash_led
 .text.startup.main
                0x000000000001f392      0x4e2 ./ATmegaBOOT_guhRF.o
                0x000000000001f392                main
 .text._get_mac
                0x000000000001f874       0x1a ./ATmegaBOOT_guhRF.o
                0x000000000001f874                _get_mac
 .text.libgcc.mul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000001f88e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000001f88e       0x10 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eerd_byte_atmega256rfr2.o)
                0x000000000001f88e                __eerd_byte_EEPROM_SUFFIX
 .text.avr-libc
                0x000000000001f89e       0x1c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eewr_byte_atmega256rfr2.o)
                0x000000000001f89e                __eewr_byte_EEPROM_SUFFIX
                0x000000000001f8a0                __eewr_r18_EEPROM_SUFFIX
                0x000000000001f8ba                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000001f8ba        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
                0x000000000001f8ba                exit
                0x000000000001f8ba                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000001f8ba        0x4 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000001f8be                _etext = .

.data           0x0000000000800200       0x2e load address 0x000000000001f8be
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
 .data          0x0000000000800200        0x0 ./ATmegaBOOT_guhRF.o
 .data          0x0000000000800200        0x0 ./jumptable.o
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eerd_byte_atmega256rfr2.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eewr_byte_atmega256rfr2.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800200       0x2d ./ATmegaBOOT_guhRF.o
 *(.gnu.linkonce.d*)
                0x000000000080022e                . = ALIGN (0x2)
 *fill*         0x000000000080022d        0x1 
                0x000000000080022e                _edata = .
                0x000000000080022e                PROVIDE (__data_end, .)

.bss            0x000000000080022e      0x10d
                0x000000000080022e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/crtm256rfr2.o
 .bss           0x000000000080022e        0x0 ./ATmegaBOOT_guhRF.o
 .bss           0x000000000080022e        0x0 ./jumptable.o
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_exit.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_copy_data.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/avr6/libgcc.a(_clear_bss.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eerd_byte_atmega256rfr2.o)
 .bss           0x000000000080022e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr6/libc.a(eewr_byte_atmega256rfr2.o)
 *(.bss*)
 .bss.app_start
                0x000000000080022e        0x2 ./ATmegaBOOT_guhRF.o
                0x000000000080022e                app_start
 .bss.error_count
                0x0000000000800230        0x1 ./ATmegaBOOT_guhRF.o
                0x0000000000800230                error_count
 .bss.bootuart  0x0000000000800231        0x1 ./ATmegaBOOT_guhRF.o
                0x0000000000800231                bootuart
 *(COMMON)
 COMMON         0x0000000000800232      0x109 ./ATmegaBOOT_guhRF.o
                0x0000000000800232                address
                0x0000000000800235                buff
                0x0000000000800335                length
                0x0000000000800338                i
                0x0000000000800339                address_high
                0x000000000080033a                flags
                0x000000000080033b                PROVIDE (__bss_end, .)
                0x000000000001f8be                __data_load_start = LOADADDR (.data)
                0x000000000001f8ec                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080033b        0x0
                0x000000000080033b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080033b                PROVIDE (__noinit_end, .)
                0x000000000080033b                _end = .
                0x000000000080033b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./ATmegaBOOT_guhRF.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(guhRF_boot.elf elf32-avr)
LOAD linker stubs

.jumps          0x000000000001ff80        0x4
 .jumps         0x000000000001ff80        0x4 ./jumptable.o
                0x000000000001ff80                get_mac
